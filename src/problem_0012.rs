//! module containing problem 12

use crate::common::integer_sqrt;

/// problem 12
///
/// "The sequence of triangle numbers is generated by adding the natural numbers."
///
/// computes the first triangle number to have over N divisors
pub fn highly_divisible_triangle_number(n: u32) -> u128 {
    let mut d = 0;  // number divisors
    let mut i = 1;  // running value to create ever bigger triangle numbers
    while d<=n {
        let number = (1..i+1).into_iter().sum();
        d = 0;
        for k in 1..integer_sqrt(number)+1 {
            if number%k==0 {
                d = d+2;    // plus two in order to account for the found divisor and the complementary dividend, which is also a divisor of the number
            }
        }
        i = i+1;
    }
    (1..i).into_iter().sum()
}
